{"version":3,"file":"index.js","sources":["../src/note-input.tsx","../src/note-field.tsx"],"sourcesContent":["import React from 'react'\nimport startCase from 'lodash/startCase'\nimport { Card, Flex, Box, Inline, Heading, Text } from '@sanity/ui'\n\nimport type { noteInputProps } from './types'\n\nconst NoteInput = React.forwardRef((args: noteInputProps, ref: any) => {\n  const { title, description, options } = args.schemaType\n\n  const displayTitle = startCase(args.id) === title ? null : title\n  const icon = options?.icon\n  const tone = options?.tone ?? 'primary'\n\n  // bail if nothing was set\n  if (!displayTitle && !description) return null\n\n  const CustomIcon = icon as React.ElementType\n\n  return (\n    <Card ref={ref} padding={[2, 4]} radius={3} tone={tone}>\n      {displayTitle && (\n        <Box marginBottom={description ? 2 : 0}>\n          <Inline space={1}>\n            {icon && <CustomIcon />}\n            <Heading size={1}>{displayTitle}</Heading>\n          </Inline>\n        </Box>\n      )}\n\n      {description && (\n        <Flex align=\"center\">\n          <Box style={{ flexShrink: 0, lineHeight: 0 }}>\n            {icon && !displayTitle && <CustomIcon style={{ fontSize: 24 }} />}\n          </Box>\n          <Box\n            marginLeft={displayTitle ? 0 : 3}\n            marginTop={!icon && displayTitle ? 1 : 0}\n          >\n            <Text size={[1, 1, 1]}>{description}</Text>\n          </Box>\n        </Flex>\n      )}\n    </Card>\n  )\n})\n\nNoteInput.displayName = 'NoteInput'\n\nexport default NoteInput\n","import { definePlugin, defineType } from 'sanity'\n\nimport NoteInput from './note-input'\n\nexport const noteField = definePlugin(() => {\n  return {\n    name: 'sanity-plugin-note-field',\n    schema: {\n      types: [\n        defineType({\n          title: 'Note',\n          name: 'note',\n          type: 'string',\n          components: {\n            input: NoteInput,\n            field: (props) => <>{props.children}</>,\n          },\n        }),\n      ],\n    },\n  }\n})\n"],"names":["NoteInput","React","forwardRef","args","ref","_a","title","description","options","schemaType","displayTitle","startCase","id","icon","tone","CustomIcon","jsxs","Card","padding","radius","children","jsx","Box","marginBottom","Inline","space","Heading","size","Flex","align","style","flexShrink","lineHeight","fontSize","marginLeft","marginTop","Text","displayName","noteField","definePlugin","name","schema","types","defineType","type","components","input","field","props","Fragment"],"mappings":"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"}